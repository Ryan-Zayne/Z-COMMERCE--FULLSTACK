import{b as e,c as t,d as n,e as r,f as i,g as a,h as o,i as s,j as c,k as l}from"./suspense-CFbDoGTd.js";import{I as u,K as d,N as f,R as p,ao as m,ax as h}from"./index-Bp9otwrI.js";var g=h(m());function _(l,m,h){let _=c(),v=s(),y=u(h),b=y.defaultQueryOptions(l);y.getDefaultOptions().queries?._experimental_beforeQuery?.(b),b._optimisticResults=_?`isRestoring`:`optimistic`,t(b),o(b,v),a(v);let x=!y.getQueryCache().get(b.queryHash),[S]=g.useState(()=>new m(y,b)),C=S.getOptimisticResult(b),w=!_&&l.subscribed!==!1;if(g.useSyncExternalStore(g.useCallback(e=>{let t=w?S.subscribe(d.batchCalls(e)):p;return S.updateResult(),t},[S,w]),()=>S.getCurrentResult(),()=>S.getCurrentResult()),g.useEffect(()=>{S.setOptions(b)},[b,S]),r(b,C))throw n(b,S,v);if(i({result:C,errorResetBoundary:v,throwOnError:b.throwOnError,query:y.getQueryCache().get(b.queryHash),suspense:b.suspense}))throw C.error;if(y.getDefaultOptions().queries?._experimental_afterQuery?.(b,C),b.experimental_prefetchInRender&&!f&&e(C,_)){let e=x?n(b,S,v):y.getQueryCache().get(b.queryHash)?.promise;e?.catch(p).finally(()=>{S.updateResult()})}return b.notifyOnChangeProps?C:S.trackResult(C)}function v(e,t){return _(e,l,t)}export{v as b};