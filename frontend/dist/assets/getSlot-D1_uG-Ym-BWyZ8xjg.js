import{ao as e,ax as t,l as n,n as r,p as i,r as a}from"./index-Bp9otwrI.js";const o=e=>i(e)?e:[e],s=e=>e?`true`:void 0,c=(e,t)=>{let{event:n,listener:i,options:a,queryScope:o=document,queryType:s=`querySelectorAll`,type:c}=t,l=c===`add`?`addEventListener`:`removeEventListener`;if(e==null){console.error(`Element is either undefined or null`);return}if(r(e)){let t=o[s](e);if(t instanceof NodeList&&t.forEach(e=>e[l](n,i,a)),t===null){console.error(`Element is either undefined or null`);return}t[l](n,i,a);return}e[l](n,i,a)},l=(e,t)=>{for(let n of e)c(n,t)},u=(e,t)=>{if(i(e)){l(e,t);return}c(e,t)},d=(...e)=>{let[t,n,r,i]=e,a=()=>(u(n,{event:t,listener:r,options:i,type:`add`}),o),o=()=>(u(n,{event:t,listener:r,options:i,type:`remove`}),a);return a()},f=(e,t,n)=>{let r=null,i,a=n=>{if(!t)return;r??=Math.floor(n);let o=Math.floor(n-r);o>=t&&(e(),r=null),i=requestAnimationFrame(a)},o=()=>{if(n?.once&&t){setTimeout(e,t);return}i=requestAnimationFrame(a)};n?.immediate&&o();let s=()=>{cancelAnimationFrame(i),r=null};return{start:o,stop:s}};var p=t(e());const m=e=>`slotSymbol`in e&&!!e.slotSymbol,h=e=>`slotReference`in e&&!!e.slotReference,g=(e,t)=>{if(!(0,p.isValidElement)(e)||!a(e.type))return!1;let n=h(e.type)?e.type.slotReference:e.type,r=m(n)&&m(t)&&n.slotSymbol===t.slotSymbol;return!!(r||e.type.name===t.name)},_=(e,t)=>{let n=t.some(t=>g(e,t));return n},v=(e,t)=>{let n=0;for(let r of e){if(!g(r,t))continue;n+=1}return n},y=(e,t,r={})=>{let{errorMessage:i=`Only one instance of the SlotComponent is allowed`,throwOnMultipleSlotMatch:a=!1}=r,s=(0,p.isValidElement)(e)&&e.type===p.Fragment?e.props.children:e,c=o(s),l=a&&v(c,t)>1;if(l)throw new n(i);let u=c.find(e=>g(e,t));return u},b=(e,t,n)=>{let{errorMessage:r,throwOnMultipleSlotMatch:a}=n??{},o=t.map((t,n)=>y(e,t,{errorMessage:i(r)?r[n]:r,throwOnMultipleSlotMatch:i(a)?a[n]:a})),s=x(e,t);return{regularChildren:s,slots:o}},x=(e,t)=>{let n=(0,p.isValidElement)(e)&&e.type===p.Fragment?e.props.children:e,r=o(n),i=r.filter(e=>!_(e,o(t)));return i};export{y as b,b as c,x as d,o as e,s as f,f as g,d as h};